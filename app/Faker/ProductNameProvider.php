<?php

namespace App\Faker;

use Faker\Provider\Base;

class ProductNameProvider extends Base
{
    protected array $baseNames = [
        // 魚介類
        'アジフライ', 'サーモンフライ', '骨取りサバ', '骨取りサーモン', 'タラフライ', 'ホッケ開き',
        'イカリング', 'エビカツ', 'エビフライ', 'ホタテフライ', 'ししゃもフライ', 'カキフライ',
        'イワシフライ', 'サンマ開き', '白身フライ', 'しらす干し', 'アジ干物', '魚ロール', '穴子天ぷら',
        'さば味噌煮', '銀ダラ西京漬け', 'ほっけ塩焼き', '海老しんじょう', 'つみれ団子',

        // 肉類・鶏肉
        '鶏もも唐揚げ', '鶏むね唐揚げ', 'チキン南蛮', 'ささみカツ', '鶏つくね', 'とり天',
        '手羽元焼き', '鶏むねフライ', 'チキンステーキ', '鶏チャーシュー', '鶏肉団子', 'やきとり串',
        'ささみフライ', 'レバー唐揚げ', 'つくね串',

        // 豚・牛
        '豚ロースカツ', 'ヒレカツ', '豚しょうが焼き', '豚バラ焼肉用', '豚角煮', '豚丼の具',
        '牛肉コロッケ', 'メンチカツ', 'ハンバーグ', '牛丼の具', '牛すじ煮込み', 'ローストビーフ',
        '和牛カルビ', '牛焼肉用スライス', '牛肉たたき',

        // 惣菜・加工品
        'コーンコロッケ', 'クリームコロッケ', 'ポテトコロッケ', 'カニクリームコロッケ',
        'カレーパン', '焼売', '春巻き', '餃子', '水餃子', '小籠包', '中華ちまき', '揚げ餃子',
        'ごぼうサラダ', 'かぼちゃコロッケ', 'ベジカツ', 'お好み焼き', 'たこ焼き', '焼きそば',

        // その他冷凍品
        '冷凍うどん', '冷凍そば', '冷凍ラーメン', '冷凍ごはん', 'チャーハン', 'ピラフ',
        'ナポリタン', 'カルボナーラ', 'ミートソーススパゲッティ', 'グラタン', 'ドリア',
        'ミックスピザ', '照り焼きピザ', 'マルゲリータ', '冷凍ホットケーキ', 'ホイップパンケーキ',

        // 業務用・学校・病院向け
        '業務用白身フライ', '業務用唐揚げ', 'ミニハンバーグ', '一口コロッケ', 'ミニささみカツ',
        'ミニメンチカツ', 'スクランブルエッグ', 'プレーンオムレツ', 'ミニとんかつ', 'かにかま',
        '冷凍コーン', 'ミックスベジタブル', '冷凍枝豆', '冷凍ブロッコリー', '冷凍ほうれん草',
    ];

    protected array $prefixes = [
        '骨取り', '大判', '一口', 'ミニ', '特大', '業務用',
    ];

    protected array $suffixes = [
        '', 'フライ', 'カツ', 'コロッケ', 'スライス', '串',
    ];

    protected array $weights = [40, 50, 60, 80, 100, 120];

    public function productName(): string
    {
        $base = $this->generator->randomElement($this->baseNames);
        $prefix = $this->generator->boolean(40) ? $this->generator->randomElement($this->prefixes) : '';
        $suffix = $this->generator->boolean(30) ? $this->generator->randomElement($this->suffixes) : '';
        $weight = $this->generator->boolean(60) ? $this->generator->randomElement($this->weights) . 'g' : '';

        $nameParts = array_filter([$prefix, $base . $suffix, $weight]);

        return implode('', $nameParts);
    }
}
